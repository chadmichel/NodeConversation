#!/usr/bin/env node

var assert = require('assert'), 
    cm = require("../managers/conversationmanager.js"),
    ca = require("../accessors/conversationAccessor.js"),
    db = require("../accessors/db.js"),
    Notifier = require("../notifier.js"), 
    logger = require("winston");

db.useTest();

describe('ConversationManager', function(){

    describe('save', function(){
        it('should save conversation', function(done) {			

            logger.info("Conversation Manager: Save: should save conversation");

            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test123"} };
                cm.saveConversation(obj).then(function(result) {	                    
                    assert(result != null);      
                    assert(result.id != null);
                    assert(result.id.length > 0);
                    assert.equal("test123", result.title);  
                    done();                    
                });			
            });
        });
    });

    describe('save', function(){
        it('should save conversation and notify', function(done) {			

            logger.info("Conversation Manager: Save: should save conversation and notify");

            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test123"} };
                var notifier = new Notifier();
                cm.saveConversation(obj, notifier).then(function(result) {	       
                    assert(result != null);      
                    assert(result.id != null);
                    assert(result.id.length > 0);
                    assert.equal("test123", result.title);  
                    assert.equal(notifier.CONVERSATION_NOTIFICATION, notifier.lastBroadcast.MESSAGETYPE);
                    done();                    
                });			
            });
        });
    });
    
    describe('find', function(){
        it('should find/load conversation', function(done) {			
            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test123"} };
                var notifier = new Notifier();
                cm.saveConversation(obj).then(function(result) {	
                    cm.findConversation({ id: result.id}, notifier).then(function(loaded) {
                        done();                    
                    });                    
                });			
            });
        });
    });

    describe('findActive', function(){
        it('should find active conversations', function(done) {			
            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test", active: true} };
                var notifier = new Notifier();
                cm.saveConversation(obj).then(function(result) {	
                    ca.findActive({}, notifier).then(function(loaded) {
                        assert.equal(1, loaded.length);
                        done();                    
                    });                    
                });			
            });
        });
    });

    describe('findActive', function(){
        it('should find no active conversations if none active', function(done) {			
            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test", active: false} };
                var notifier = new Notifier();
                cm.saveConversation(obj).then(function(result) {	
                    ca.findActive({}, notifier).then(function(loaded) {
                        assert.equal(0, loaded.length);
                        done();                    
                    });                    
                });			
            });
        });
    });

    describe('findActiveForUser', function(){
        it('should find active conversations for user', function(done) {			
            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test", active: true, users: 
                    [ { id: "1", email: "1@e.com", active: true }, 
                      { id: "2", email: "2@e.com", active: true }, 
                      { id: "3", email: "2@e.com", active: true }
                    ] } };
                var notifier = new Notifier();
                cm.saveConversation(obj).then(function(result) {	
                    cm.findActiveForUser({userId: "2"}, notifier).then(function(loaded) {
                        assert.equal(1, loaded.length);
                        done();                    
                    });                    
                });			
            });
        });
    });

    describe('findActiveForUser', function(){
        it('should find no active conversations for user', function(done) {			
            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test", active: true, users: 
                    [ { id: "1", email: "1@e.com", active: true }, 
                      { id: "2", email: "2@e.com", active: true }, 
                      { id: "3", email: "2@e.com", active: true }
                    ] } };
                var notifier = new Notifier();
                cm.saveConversation(obj).then(function(result) {	
                    cm.findActiveForUser({userId: "4"}, notifier).then(function(loaded) {
                        assert.equal(0, loaded.length);
                        done();                    
                    });                    
                });			
            });
        });
    });

    describe('sendMessage', function(){
        it('should save and rebroadcast a new message with existing conversation', function(done) {			
            ca.clearAll().then(function() {
                var obj = { conversation: { title: "test123"} };
                cm.saveConversation(obj).then(function(result) {	                    

                    var obj2 = { 
                        isNew: false,
                        conversation: result,
                        message: {
                            body: "a body",
                            userId: 10
                            }
                        };

                    var notifier = new Notifier();
                    cm.sendMessage(obj2, notifier).then(function(result) {	
                        done();
                        assert.equal(notifier.MESSAGE_NOTIFICATION, notifier.lastBroadcast.MESSAGETYPE);
                    });			
                    
                });			
            });
        });

        it('should save and rebroadcast a new message with new conversation', function(done) {	
            ca.clearAll().then(function() {
                var obj = { 
                    isNew: true,
                    conversation: { 
                        title: "test123"
                        }, 
                    message: {
                        body: "a body",
                        userId: 10
                        }
                    };
                var notifier = new Notifier();
                cm.sendMessage(obj, notifier).then(function(result) {	
                    assert.equal(notifier.MESSAGE_NOTIFICATION, notifier.lastBroadcast.MESSAGETYPE);
                    done();                    
                });			
            });
        });
    });
});


            